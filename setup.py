import os
import importlib.machinery

from setuptools import setup, find_packages
from subprocess import check_output, CalledProcessError

here = os.path.abspath(os.path.dirname(__file__))
with open(os.path.join(here, 'README.md')) as f:
    README = f.read()
with open(os.path.join(here, 'CHANGES.txt')) as f:
    CHANGES = f.read()

requires = [
    'requests',
    ]


classifiers = [
    'Programming Language :: Python',
    ]


# get version and store to iCount/_version.py
version = "0.0.0"
try:
    # get version from github
    version = check_output('git describe --tags --long --dirty'.split())
    version = version.decode('utf-8').strip()
    parts = version.split('-')
    assert len(parts) in (3, 4)
    dirty = len(parts) == 4
    tag, count, sha = parts[:3]
    if count == '0' and not dirty:
        version = tag
    else:
        version = "{tag}.dev{ccount}+{gitsha}".format(
            tag=tag,
            ccount=count,
            gitsha=sha.lstrip('g'),
        )
        if dirty:
            version += "dirty"
    open('enCount/_version.py', 'w').write(
        "# THIS FILE WAS GENERATED BY SETUP.PY\n"
        "__version__ = '{}'\n".format(version))
except (CalledProcessError, FileNotFoundError) as e:
    print('Count not query git: {0}'.format(e))
    try:
        # use version in _version.py
        loader = importlib.machinery.SourceFileLoader('enCount._version',
                                                      'enCount/_version.py')
        version = loader.load_module()
        version = version.__version__
    except FileNotFoundError as e:
        print("Please, add a version tag or proper version file "
              "enCount/_version.py.")
        exit(1)

setup(name='enCount',
      version=version,
      description='Computational pipeline for analysis of ENCODE data',
      long_description=README + '\n\n' + CHANGES,
      classifiers=classifiers,
      author='University of Ljubljana, Bioinformatics Laboratory',
      author_email='tomaz.curk@fri.uni-lj.si',
      url='',
      keywords='RNA-Seq ENCODE',
      packages=find_packages(),
      include_package_data=True,
      zip_safe=False,
      install_requires=requires,
      tests_require=requires,
      )
